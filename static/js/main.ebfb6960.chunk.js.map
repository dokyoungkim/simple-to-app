{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","onClick","deleteTodoProps","type","checked","onChange","handleChangeProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","state","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","reponse","filter","addTodoItem","post","response","data","get","ReactDOM","render"],"mappings":"uPA4BeA,E,qLAxBXC,MAAM,+B,+BAGE,IAAD,SAQ0BC,KAAKC,MAAMC,KAApCC,EARD,EAQCA,UAAWC,EARZ,EAQYA,GAAIC,EARhB,EAQgBA,MAEvB,OAAO,wBAAIC,UAAU,aACT,4BAAQC,QAAS,kBAAM,EAAKN,MAAMO,gBAAgBJ,KAAlD,UACA,2BAAOK,KAAK,WAAWC,QAASP,EACRQ,SAAU,kBAAM,EAAKV,MAAMW,kBAAkBR,MACrE,0BAAMS,MAAOV,EAbF,CACrBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBASoC,MACvCZ,Q,GApBIa,IAAMC,WCgBdC,E,uKAdH,IAAD,OACP,OACE,6BACGpB,KAAKC,MAAMoB,MAAMC,KAAI,SAAApB,GAAI,OACxB,kBAAC,EAAD,CAAUqB,IAAKrB,EAAKE,GAAIF,KAAMA,EACpBU,kBAAmB,EAAKX,MAAMW,kBAC9BJ,gBAAiB,EAAKP,MAAMO,0B,GAPxBU,IAAMC,WCgDfK,E,iLA7BMC,EAAWC,GAC5B,IAGIC,EAAU,OAHNC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGG,IAFnBF,KAAKC,MAAsB,IAAhBD,KAAKE,UAEa,IAD7BF,KAAKC,MAAsB,IAAhBD,KAAKE,UACuB,IAE3CL,EAAUM,aAAe/B,KAAKC,MAAM8B,aACtCC,SAASC,eAAe,QAAQC,UAAY,UAC5CF,SAASC,eAAe,QAAQpB,MAAMsB,gBAAkBR,K,+BAQ1D,OACE,4BAAQd,MALU,CAClBuB,QAAS,SACTC,WAAY,QAIV,wBAAIxB,MAAO,CAAEyB,SAAU,OAAQC,aAAc,SAA7C,mBACkB,0BAAMnC,GAAG,UAE3B,uBAAGS,MAAO,CAAEyB,SAAU,SAAtB,0D,GAtBanB,a,QCQNqB,E,4MAjBb7B,SAAW,SAAA8B,GACT,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI3CC,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAK9C,MAAM+C,aAAa,EAAKC,MAAM5C,OACnC,EAAKqC,SAAS,CAACrC,MAAO,M,EAGxB4C,MAAQ,CACN5C,MAAO,I,uDApBP,OACE,0BAAM6C,SAAUlD,KAAK8C,aAAcxC,UAAU,kBAC3C,2BAAOG,KAAK,OAAO0C,YAAY,cAAcP,KAAK,QAAQtC,UAAU,aAAauC,MAAO7C,KAAKiD,MAAM5C,MAAOM,SAAUX,KAAKW,WACzH,2BAAOF,KAAK,SAASoC,MAAM,SAAUvC,UAAU,sB,GAL/Ba,a,gBC+FTiC,E,4MAvFbH,MAAQ,CACN5B,MAAO,GACPgC,MAAM,G,EA0BNC,aAAe,SAAAlD,GACb,EAAKsC,SAAS,CACZrB,MAAO,EAAK4B,MAAM5B,MAAMC,KAAI,SAAApB,GAI1B,OAHIA,EAAKE,KAAOA,IACdF,EAAKC,WAAaD,EAAKC,WAElBD,KAETmD,MAAO,EAAKJ,MAAMI,Q,EAapBE,QAAU,SAAAnD,GACRoD,IACGC,OAAO,oDACPC,MAAK,SAAAC,GAAO,OACX,EAAKjB,SAAS,CACZrB,MAAM,YACD,EAAK4B,MAAM5B,MAAMuC,QAAO,SAAA1D,GACzB,OAAOA,EAAKE,KAAOA,Y,EAgB/ByD,YAAc,SAAAxD,GACZmD,IACGM,KAAK,6CAA8C,CAClDzD,MAAOA,EACPF,WAAW,IAEZuD,MAAK,SAAAK,GAAQ,OACZ,EAAKrB,SAAS,CACZrB,MAAM,GAAD,mBAAM,EAAK4B,MAAM5B,OAAjB,CAAwB0C,EAASC,a,kEA3E7B,IAAD,OAClBR,IAAMS,IAAI,wDACPP,MAAK,SAAAK,GAAQ,OAAI,EAAKrB,SAAS,CAAErB,MAAO0C,EAASC,Y,+BAYhD,OACI,yBAAK1D,UAAU,aACX,kBAAC,EAAD,CAAQyB,WAAY/B,KAAKiD,MAAMI,OAC/B,kBAAC,EAAD,CAAWL,aAAchD,KAAK6D,cAC9B,kBAAC,EAAD,CAAWxC,MAAOrB,KAAKiD,MAAM5B,MAAOT,kBAAmBZ,KAAKsD,aAAc9C,gBAAiBR,KAAKuD,e,GA1BpFrC,IAAMC,W,MCFlC+C,IAASC,OAAO,kBAAC,EAAD,MAAmBnC,SAASC,eAAe,W","file":"static/js/main.ebfb6960.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n  componentWillUnmount() {\r\n    alert(\"Item about to be deleted!\");\r\n  }\r\n    \r\n  render() {\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#d35e0f\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\",\r\n    }\r\n\r\n    const { completed, id, title } = this.props.todo;\r\n\r\n    return <li className=\"todo-item\">\r\n                <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n                <input type=\"checkbox\" checked={completed} \r\n                                        onChange={() => this.props.handleChangeProps(id)}/> \r\n                <span style={completed ? completedStyle : null}>\r\n                  {title}\r\n                </span>                \r\n            </li>\r\n  }\r\n}\r\n\r\nexport default TodoItem\r\n\r\n// import React from \"react\"\r\n\r\n// function TodoItem(props) {\r\n//   return <li><input type=\"checkbox\" checked={props.todo.completed} onChange={() => this.props.handleChangeProps(this.props.todo.id)}/> {props.todo.title}</li>\r\n// }\r\n\r\n// export default TodoItem","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.todos.map(todo => (\r\n          <TodoItem key={todo.id} todo={todo} \r\n                    handleChangeProps={this.props.handleChangeProps} \r\n                    deleteTodoProps={this.props.deleteTodoProps}   /> \r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default TodosList","// import React from \"react\"\r\n\r\n// const Header = () => {\r\n//   const headerStyle = {\r\n//     padding: \"20px 0\",\r\n//     lineHeight: \"2em\",\r\n//   }  \r\n//   return (\r\n//     <header style={headerStyle}>\r\n//       <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n//           Simple Todo App <span id=\"inH1\"></span>\r\n//       </h1>\r\n//       <p style={{ fontSize: \"19px\" }}>Please add to-dos item(s) through the input field</p>\r\n//     </header>\r\n//   )\r\n// }\r\n\r\n// export default Header\r\n\r\nimport React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var x = Math.floor(Math.random() * 256);\r\n    var y = Math.floor(Math.random() * 256);\r\n    var z = Math.floor(Math.random() * 256);\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n  \r\n    if (prevProps.headerSpan !== this.props.headerSpan) {\r\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n    }\r\n  }  \r\n  render() {\r\n    const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"2em\",\r\n    }\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n          Simple Todo App <span id=\"inH1\"></span>\r\n        </h1>\r\n        <p style={{ fontSize: \"19px\" }}>\r\n          Please add to-dos item(s) through the input field\r\n        </p>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input type=\"text\" placeholder=\"Add Todo...\" name=\"title\" className=\"input-text\" value={this.state.title} onChange={this.onChange}/>\r\n        <input type=\"submit\" value=\"Submit\"  className=\"input-submit\"/>\r\n      </form>\r\n    )\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n    //console.log(e.target.name);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addTodoProps(this.state.title);\r\n    this.setState({title: \"\"});\r\n  };\r\n\r\n  state = {\r\n    title: \"\"\r\n  }; \r\n\r\n\r\n}\r\nexport default InputTodo","import React from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass TodoContainer extends React.Component {\r\n\r\n  // state management.\r\n  state = {\r\n    todos: [],\r\n    show: false\r\n  };  \r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then(response => this.setState({ todos: response.data }));\r\n  }\r\n    // componentDidMount() {\r\n    //   axios.get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n    //       params: {\r\n    //         _limit: 10\r\n    //       }\r\n    //     })\r\n    //     .then(response => console.log(response.data));\r\n    // }    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header headerSpan={this.state.show} />\r\n                <InputTodo addTodoProps={this.addTodoItem}/>\r\n                <TodosList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodoProps={this.delTodo}/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    handleChange = id => {\r\n      this.setState({\r\n        todos: this.state.todos.map(todo => {\r\n          if (todo.id === id) {\r\n            todo.completed = !todo.completed\r\n          }\r\n          return todo\r\n        }),\r\n        show: !this.state.show,\r\n      })\r\n    }\r\n\r\n      // delTodo = id => {\r\n      //   this.setState({\r\n      //     todos: [\r\n      //       ...this.state.todos.filter(todo => {\r\n      //         return todo.id !== id;\r\n      //       })\r\n      //     ]\r\n      //   });\r\n      // };\r\n      delTodo = id => {\r\n        axios\r\n          .delete('https://jsonplaceholder.typicode.com/todos/${id}')\r\n          .then(reponse =>\r\n            this.setState({\r\n              todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                  return todo.id !== id\r\n                }),\r\n              ],\r\n            })\r\n          )\r\n      }\r\n      // addTodoItem = title => {\r\n      //   var newTodo = {\r\n      //     id: uuidv4(),\r\n      //     title: title,\r\n      //     completed: false\r\n      //   };\r\n      //   this.setState({\r\n      //     todos: [...this.state.todos, newTodo]\r\n      //   });\r\n      // };\r\n      addTodoItem = title => {\r\n        axios\r\n          .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n            title: title,\r\n            completed: false,\r\n          })\r\n          .then(response =>\r\n            this.setState({\r\n              todos: [...this.state.todos, response.data],\r\n            })\r\n          )\r\n      }\r\n\r\n   \r\n}\r\nexport default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TodoContainer from \"./components/TodoContainer\"\nimport \"./App.css\"\n\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}